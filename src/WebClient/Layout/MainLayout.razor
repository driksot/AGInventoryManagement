@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">AG INVENTORY</MudText>
        <MudSpacer />
        <MudTooltip Text="Toggle Dark Mode">
            <MudSwitch @bind-Value="@_isDarkMode" Color="Color.Primary" Class="ma-4" T="bool" ThumbIcon="@(_isDarkMode==true ? Icons.Material.Filled.DarkMode : Icons.Material.Filled.LightMode)" />
        </MudTooltip>
        <LoginDisplay />
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
            <CascadingValue Value="_theme">
                @Body
            </CascadingValue>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MudTheme _theme = new();
    private bool _isDarkMode;
    bool _drawerOpen = true;

    protected override void OnInitialized()
    {
        _isDarkMode = false;
        _theme = CustomTheme.DefaultTheme;
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkMode()
    {
        _isDarkMode = !_isDarkMode;
        _theme = _isDarkMode
            ? CustomTheme.DarkTheme
            : CustomTheme.DefaultTheme;
    }
}
